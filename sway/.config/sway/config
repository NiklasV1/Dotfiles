### Variables

# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Vim keys for widow selection
set $left h
set $down j
set $up k
set $right l

# Terminal emulator
set $term kitty

# Set file explorer
set $explorer ranger

# Set browser
set $webbrowser firefox

# Set notes app
set $notes "OBSIDIAN_USE_WAYLAND=1 obsidian -enable-features=UseOzonePlatform -ozone-platform=wayland"

# Application launcher colors

# Colors
set $borderIndicator #F27900

set $white #FFFFFF
set $black #000000
set $color #F27900

set $base0 #1A1918
set $base1 #595855
set $base2 #807E79
set $base3 #999791
set $base4 #B3B1AD
set $base5 #CCCBC6
set $base6 #E6E4DF
set $base7 #FAF2EB

# Application launcher
set $menu bemenu-run -i -l "12" --center -W "0.16" -p Run --fn MononokiNerdFont 12 --ch 14 -B 2 --bdr "$base1" --cw "2" --tb "$base1" --tf "$white" --fb "$base1" --ff "$white" --cb "$white" --cf "$white" --nb "$base6" --nf "$black" --hb "$base4" --hf "$black" --ab "$base6" --af "$black"

### Styling

# Color styling
# class                 border  bground text    indicator   child_border
client.focused          $base5  $base1  $white  $base1      $base1
client.unfocused        $base5  $base5  $black  $base5      $base5
client.focused_inactive $base5  $base5  $black  $base5      $base5

# Font
# TODO

# Window borders
default_border pixel 2

# Gaps
# smart_gaps on
# gaps inner 10


### Output Configuration

# Display Settings
output DP-2 mode 3840x2160@160.001Hz scale 2 adaptive_sync on position 0 0 render_bit_depth 8
# output DP-3 resolution 1920x1080@144.001Hz position 1920,0
output DP-3 disable

# Bind Workspaces to Displays
workspace 1 output DP-2
workspace 2 output DP-2
workspace 3 output DP-2
workspace 4 output DP-2
workspace 5 output DP-2
workspace 6 output DP-2
# workspace 7 output DP-3 DP-2
# workspace 8 output DP-3 DP-2 
# Get the names of outputs by running: swaymsg -t get_outputs

# Wallpaper
output * bg "~/Pictures/Wallpapers/a_quiet_mind_UltraHD.png" fill



### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.



### Input configuration

# Mouse configuration
input "type:mouse" {
    accel_profile flat
    pointer_accel -1
}

# Keyboard configuration
input "type:keyboard" {
    repeat_delay 300
    repeat_rate 50
    xkb_options "caps:escape,compose:ralt"
}
# Get the names of inputs by running: swaymsg -t get_inputs



### Key bindings

## Basics

# Start terminal
bindsym $mod+Return exec $term

# Start file explorer
bindsym $mod+e exec $term $explorer

#Start browser
bindsym $mod+w exec $webbrowser

# Start note taking app
bindsym $mod+n exec $notes

# Kill focused window
bindsym $mod+Shift+q kill

# Start launcher
bindsym $mod+d exec $menu

# Take Screenshot
bindsym $mod+Shift+s exec "grim - | wl-copy"

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload configuration file
bindsym $mod+Shift+c reload

# Exit sway (log out of Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'


## Moving focus and windows

# Move focus with vim key variables
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# Move focus with arrow keys
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move windows with vim key variables
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# Move windows with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right


## Workspaces

# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.


## Layout

# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splitt

# Switch the current container between different layout styles
# bindsym $mod+s layout stacking
# bindsym $mod+w layout tabbed
# bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent


## Scratchpad

# Sway has a "scratchpad", which is a bag of holding for windows
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show


## Resizing containers

mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


## Utilities

# Special keys to adjust volume via PulseAudio
bindsym --locked XF86AudioMute exec pactl set-sink-mute \@DEFAULT_SINK@ toggle
bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume \@DEFAULT_SINK@ -5%
bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume \@DEFAULT_SINK@ +5%
bindsym --locked XF86AudioMicMute exec pactl set-source-mute \@DEFAULT_SOURCE@ toggle
# Special keys to adjust brightness via brightnessctl
bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+
# Special key to take a screenshot with grim
bindsym Print exec grim


## Status Bar

# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    font MononokiNerdFont 10

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%A | %d-%m-%Y | %T '; do sleep 1; done

    colors {
        statusline $black
        background $base6
        focused_workspace $base1 $base1 $white
        inactive_workspace $base5 $base5 $black
    }
}

include @sysconfdir@/sway/config.d/*

